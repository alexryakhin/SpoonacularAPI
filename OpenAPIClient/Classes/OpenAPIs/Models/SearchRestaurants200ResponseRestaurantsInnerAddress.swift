//
// SearchRestaurants200ResponseRestaurantsInnerAddress.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SearchRestaurants200ResponseRestaurantsInnerAddress: Codable, JSONEncodable, Hashable {

    public var streetAddr: String?
    public var city: String?
    public var state: String?
    public var zipcode: String?
    public var country: String?
    public var lat: Double?
    public var lon: Double?
    public var streetAddr2: String?
    public var latitude: Double?
    public var longitude: Double?

    public init(streetAddr: String? = nil, city: String? = nil, state: String? = nil, zipcode: String? = nil, country: String? = nil, lat: Double? = nil, lon: Double? = nil, streetAddr2: String? = nil, latitude: Double? = nil, longitude: Double? = nil) {
        self.streetAddr = streetAddr
        self.city = city
        self.state = state
        self.zipcode = zipcode
        self.country = country
        self.lat = lat
        self.lon = lon
        self.streetAddr2 = streetAddr2
        self.latitude = latitude
        self.longitude = longitude
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case streetAddr = "street_addr"
        case city
        case state
        case zipcode
        case country
        case lat
        case lon
        case streetAddr2 = "street_addr_2"
        case latitude
        case longitude
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(streetAddr, forKey: .streetAddr)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(zipcode, forKey: .zipcode)
        try container.encodeIfPresent(country, forKey: .country)
        try container.encodeIfPresent(lat, forKey: .lat)
        try container.encodeIfPresent(lon, forKey: .lon)
        try container.encodeIfPresent(streetAddr2, forKey: .streetAddr2)
        try container.encodeIfPresent(latitude, forKey: .latitude)
        try container.encodeIfPresent(longitude, forKey: .longitude)
    }
}

