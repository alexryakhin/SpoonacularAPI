//
// AutocompleteIngredientSearch200ResponseInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AutocompleteIngredientSearch200ResponseInner: Codable, JSONEncodable, Hashable {

    static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let imageRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let aisleRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var name: String
    public var image: String
    public var id: Int?
    public var aisle: String?
    public var possibleUnits: [String]?

    public init(name: String, image: String, id: Int? = nil, aisle: String? = nil, possibleUnits: [String]? = nil) {
        self.name = name
        self.image = image
        self.id = id
        self.aisle = aisle
        self.possibleUnits = possibleUnits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case image
        case id
        case aisle
        case possibleUnits
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(image, forKey: .image)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(aisle, forKey: .aisle)
        try container.encodeIfPresent(possibleUnits, forKey: .possibleUnits)
    }
}

