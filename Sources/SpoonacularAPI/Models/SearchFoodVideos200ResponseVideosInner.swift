//
// SearchFoodVideos200ResponseVideosInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SearchFoodVideos200ResponseVideosInner: Codable, JSONEncodable, Hashable {

    static let titleRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let shortTitleRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let thumbnailRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let youTubeIdRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var title: String
    public var length: Int
    public var rating: Double
    public var shortTitle: String
    public var thumbnail: String
    public var views: Int
    public var youTubeId: String

    public init(title: String, length: Int, rating: Double, shortTitle: String, thumbnail: String, views: Int, youTubeId: String) {
        self.title = title
        self.length = length
        self.rating = rating
        self.shortTitle = shortTitle
        self.thumbnail = thumbnail
        self.views = views
        self.youTubeId = youTubeId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case length
        case rating
        case shortTitle
        case thumbnail
        case views
        case youTubeId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(title, forKey: .title)
        try container.encode(length, forKey: .length)
        try container.encode(rating, forKey: .rating)
        try container.encode(shortTitle, forKey: .shortTitle)
        try container.encode(thumbnail, forKey: .thumbnail)
        try container.encode(views, forKey: .views)
        try container.encode(youTubeId, forKey: .youTubeId)
    }
}

